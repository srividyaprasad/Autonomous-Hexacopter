// generated from rosidl_adapter/resource/msg.idl.em
// with input from px4_msgs/msg/BatteryStatus.msg
// generated code does not contain a copyright notice


module px4_msgs {
  module msg {
    typedef float float__10[10];
    module BatteryStatus_Constants {
      const uint8 BATTERY_SOURCE_POWER_MODULE = 0;
      const uint8 BATTERY_SOURCE_EXTERNAL = 1;
      const uint8 BATTERY_SOURCE_ESCS = 2;
      const uint8 BATTERY_WARNING_NONE = 0;
      const uint8 BATTERY_WARNING_LOW = 1;
      const uint8 BATTERY_WARNING_CRITICAL = 2;
      const uint8 BATTERY_WARNING_EMERGENCY = 3;
      const uint8 BATTERY_WARNING_FAILED = 4;
      const uint8 MAX_INSTANCES = 4;
    };
    struct BatteryStatus {
      @verbatim (language="comment", text=
        " time since system start (microseconds)")
      uint64 timestamp;

      @verbatim (language="comment", text=
        " Battery voltage in volts, 0 if unknown")
      float voltage_v;

      @verbatim (language="comment", text=
        " Battery voltage in volts, filtered, 0 if unknown")
      float voltage_filtered_v;

      @verbatim (language="comment", text=
        " Battery current in amperes, -1 if unknown")
      float current_a;

      @verbatim (language="comment", text=
        " Battery current in amperes, filtered, 0 if unknown")
      float current_filtered_a;

      @verbatim (language="comment", text=
        " Battery current average in amperes, -1 if unknown")
      float average_current_a;

      @verbatim (language="comment", text=
        " Discharged amount in mAh, -1 if unknown")
      float discharged_mah;

      @verbatim (language="comment", text=
        " From 1 to 0, -1 if unknown")
      float remaining;

      @verbatim (language="comment", text=
        " Power scaling factor, >= 1, or -1 if unknown")
      float scale;

      @verbatim (language="comment", text=
        " temperature of the battery. NaN if unknown")
      float temperature;

      @verbatim (language="comment", text=
        " Number of cells")
      int32 cell_count;

      @verbatim (language="comment", text=
        " Whether or not a battery is connected, based on a voltage threshold")
      boolean connected;

      @verbatim (language="comment", text=
        " Battery source")
      uint8 source;

      @verbatim (language="comment", text=
        " Zero based priority is the connection on the Power Controller V1..Vn AKA BrickN-1")
      uint8 priority;

      @verbatim (language="comment", text=
        " actual capacity of the battery")
      uint16 capacity;

      @verbatim (language="comment", text=
        " number of discharge cycles the battery has experienced")
      uint16 cycle_count;

      @verbatim (language="comment", text=
        " predicted remaining battery capacity based on the present rate of discharge in min")
      uint16 run_time_to_empty;

      @verbatim (language="comment", text=
        " predicted remaining battery capacity based on the average rate of discharge in min")
      uint16 average_time_to_empty;

      @verbatim (language="comment", text=
        " serial number of the battery pack")
      uint16 serial_number;

      @verbatim (language="comment", text=
        " manufacture date, part of serial number of the battery pack. formated as: Day + Month×32 + (Year–1980)×512")
      uint16 manufacture_date;

      @verbatim (language="comment", text=
        " state of health. FullChargeCapacity/DesignCapacity.")
      uint16 state_of_health;

      @verbatim (language="comment", text=
        " max error, expected margin of error in % in the state-of-charge calculation with a range of 1 to 100%")
      uint16 max_error;

      @verbatim (language="comment", text=
        " ID number of a battery. Should be unique and consistent for the lifetime of a vehicle. 1-indexed.")
      uint8 id;

      @verbatim (language="comment", text=
        " SMBUS interface error counter")
      uint16 interface_error;

      @verbatim (language="comment", text=
        " Battery individual cell voltages")
      float__10 voltage_cell_v;

      @verbatim (language="comment", text=
        " Max difference between individual cell voltages")
      float max_cell_voltage_delta;

      @verbatim (language="comment", text=
        " Power off event imminent indication, false if unknown")
      boolean is_powering_off;

      @verbatim (language="comment", text=
        " current battery warning")
      uint8 warning;
    };
  };
};
